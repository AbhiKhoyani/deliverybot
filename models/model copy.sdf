<?xml version="1.0" ?>
<sdf version="1.5">
  <model name="deliverybot">
    <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>

    <link name="base_footprint"/>

    <link name="base_link">

      <inertial>
        <pose>-0.032 0 0.070 0 0 0</pose>
        <inertia>
          <ixx>7.2397393e-01</ixx>
          <ixy>4.686399e-10</ixy>
          <ixz>-1.09525703e-08</ixz>
          <iyy>7.2397393e-01</iyy>
          <iyz>2.8582649e-09</iyz>
          <izz>6.53050163e-01</izz>
        </inertia>
        <mass>8.2573504e-01</mass>
      </inertial>

      <collision name="base_collision">
        <pose>-0.032 0 0.070 0 0 0</pose>
        <geometry>
          <box>
            <size>0.140 0.140 0.140</size>
          </box>
        </geometry>
      </collision>

      <visual name="base_visual">
        <pose>-0.032 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_common/meshes/burger_base.dae</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <!-- <link name="imu_link">
      <sensor name="tb3_imu" type="imu">
        <always_on>true</always_on>
        <update_rate>200</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="turtlebot3_imu" filename="libgazebo_ros_imu_sensor.so">
          <ros>
            <namespace>/tb3</namespace>
            <remapping>~/out:=imu</remapping>
          </ros>
        </plugin>
      </sensor>
    </link> -->

    <!-- <link name="base_scan">
      <inertial>
        <pose>-0.020 0 0.161 0 0 0</pose>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
        </inertia>
        <mass>0.114</mass>
      </inertial>

      <collision name="lidar_sensor_collision">
        <pose>-0.020 0 0.161 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.0508</radius>
            <length>0.055</length>
          </cylinder>
        </geometry>
      </collision>

      <visual name="lidar_sensor_visual">
        <pose>-0.032 0 0.171 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_common/meshes/lds.dae</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
      </visual>

      <sensor name="hls_lfcd_lds" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <pose>-0.032 0 0.171 0 0 0</pose>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.000000</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.120000</min>
            <max>3.5</max>
            <resolution>0.015000</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="turtlebot3_laserscan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <namespace>/tb3</namespace>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan</frame_name>
        </plugin>
      </sensor>
    </link> -->

    <link name="wheel_left_link">

      <inertial>
        <pose>0 0.08 0.023 -1.57 0 0</pose>
        <inertia>
          <ixx>1.8158194e-03</ixx>
          <ixy>-9.3392e-12</ixy>
          <ixz>1.04909e-11</ixz>
          <iyy>3.2922126e-03</iyy>
          <iyz>5.75694e-11</iyz>
          <izz>1.8158194e-03</izz>
        </inertia>
        <mass>2.8498940e-02</mass>
      </inertial>

      <collision name="wheel_left_collision">
        <pose>0 0.08 0.023 -1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.033</radius>
            <length>0.018</length>
          </cylinder>
        </geometry>
        <surface>
          <!-- This friction pamareter don't contain reliable data!! -->
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>

      <visual name="wheel_left_visual">
        <pose>0 0.08 0.023 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_common/meshes/tire.dae</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <link name="wheel_right_link">

      <inertial>
        <pose>0.0 -0.08 0.023 -1.57 0 0</pose>
        <inertia>
          <ixx>1.8158194e-03</ixx>
          <ixy>-9.3392e-12</ixy>
          <ixz>1.04909e-11</ixz>
          <iyy>3.2922126e-03</iyy>
          <iyz>5.75694e-11</iyz>
          <izz>1.8158194e-03</izz>
        </inertia>
        <mass>2.8498940e-02</mass>
      </inertial>

      <collision name="wheel_right_collision">
        <pose>0.0 -0.08 0.023 -1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.033</radius>
            <length>0.018</length>
          </cylinder>
        </geometry>
        <surface>
          <!-- This friction pamareter don't contain reliable data!! -->
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>

      <visual name="wheel_right_visual">
        <pose>0.0 -0.08 0.023 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_common/meshes/tire.dae</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <link name='caster_back_link'>
      <pose>-0.081 0 -0.004 -1.57 0 0</pose>
      <inertial>
        <mass>0.005</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.005000</radius>
          </sphere>
        </geometry>
        <surface>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>

    <joint name="base_joint" type="fixed">
      <parent>base_footprint</parent>
      <child>base_link</child>
      <pose>0.0 0.0 0.010 0 0 0</pose>
    </joint>

    <joint name="wheel_left_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_left_link</child>
      <pose>0.0 0.08 0.023 -1.57 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name="wheel_right_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_right_link</child>
      <pose>0.0 -0.08 0.023 -1.57 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name='caster_back_joint' type='ball'>
      <parent>base_link</parent>
      <child>caster_back_link</child>
    </joint>

  <joint name="cam_left_joint" type="fixed">
    <parent link="base_link"/>
    <child link="cam_left_link"/>
    <origin xyz="0.02592 -0.018241 0.16451" rpy="1.57 0 0.3"/>
  </joint>
  <link name="cam_left_link">
    <visual name='base_link_2_cam_left_vis'>
      <pose> 0 0 0 -1.57 0 -1.57</pose>
      <geometry>
        <mesh>
         <uri>package://realsense2_description/meshes/d435.dae</uri>
         <scale>1 1 1</scale>
        </mesh> 
      </geometry>
      <material name="dark"/>
    </visual>
    <sensor name='cameracolor' type='camera'>
      <camera name='cam_left'>
        <horizontal_fov>1.48702</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>1</visualize>
    </sensor>
    <sensor name='cameraired1' type='camera'>
      <camera name='cam_left'>
          <horizontal_fov>1.48702</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>L_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.05</stddev>
          </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name='cameraired2' type='camera'>
      <camera name='cam_left'>
        <horizontal_fov>1.48702</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name='cameradepth' type='depth'>
      <camera name='cam_left'>
        <horizontal_fov>1.48702</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0</mean>
          <stddev>0.1</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
  </link>
  <plugin name='cam_left' filename='librealsense_gazebo_plugin.so'>
    <prefix>cam_left</prefix>
    <depthUpdateRate>60.0</depthUpdateRate>
    <colorUpdateRate>60.0</colorUpdateRate>
    <infraredUpdateRate>60.0</infraredUpdateRate>
    <depthTopicName>${name}/depth/image_raw</depthTopicName>
    <depthCameraInfoTopicName>${name}/depth/camera_info</depthCameraInfoTopicName>
    <colorTopicName>${name}/color/image_raw</colorTopicName>
    <colorCameraInfoTopicName>${name}/color/camera_info</colorCameraInfoTopicName>
    <infrared1TopicName>${name}/infra1/image_raw</infrared1TopicName>
    <infrared1CameraInfoTopicName>${name}/infra1/camera_info</infrared1CameraInfoTopicName>
    <infrared2TopicName>${name}/infra2/image_raw</infrared2TopicName>
    <infrared2CameraInfoTopicName>${name}/infra2/camera_info</infrared2CameraInfoTopicName>
    <colorOpticalframeName>cam_left_link_color_optical_frame</colorOpticalframeName>
    <depthOpticalframeName>cam_left_link_depth_optical_frame</depthOpticalframeName>
    <infrared1OpticalframeName>cam_left_link_left_ir_optical_frame</infrared1OpticalframeName>
    <infrared2OpticalframeName>cam_left_link_right_ir_optical_frame</infrared2OpticalframeName>
    <rangeMinDepth>0.2</rangeMinDepth>
    <rangeMaxDepth>10.0</rangeMaxDepth>
    <pointCloud>1</pointCloud>
    <pointCloudTopicName>depth/color/points</pointCloudTopicName>
    <pointCloudCutoff>0.25</pointCloudCutoff>
    <pointCloudCutoffMax>9.0</pointCloudCutoffMax>
  </plugin>

  <!-- <joint name="cam_right_joint" type="fixed">
    <parent link="base_link"/>
    <child link="cam_right_link"/>
    <origin xyz=0.03448 0.041759 0.16451 -1.5699422 0.349102 -0.0002914/>
  </joint>
  <link name="cam_right_link">
    <visual name='base_link_2_cam_right_vis'>
      <pose> 0 0 0 -1.57 0 -1.57</pose>
      <geometry>
        <mesh>
         <uri>package://realsense2_description/meshes/d435.dae</uri>
         <scale>1 1 1</scale>
        </mesh> 
      </geometry>
      <material name="dark"/>
    </visual>
    <sensor name='cameracolor' type='camera'>
      <camera name='cam_right'>
        <horizontal_fov>1.48702</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>1</visualize>
    </sensor>
    <sensor name='cameraired1' type='camera'>
      <camera name='cam_right'>
          <horizontal_fov>1.48702</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>L_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.05</stddev>
          </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name='cameraired2' type='camera'>
      <camera name='cam_right'>
        <horizontal_fov>1.48702</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name='cameradepth' type='depth'>
      <camera name='cam_right'>
        <horizontal_fov>1.48702</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0</mean>
          <stddev>0.1</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
  </link>
  <plugin name='cam_right' filename='librealsense_gazebo_plugin.so'>
    <prefix>cam_right</prefix>
    <depthUpdateRate>60.0</depthUpdateRate>
    <colorUpdateRate>60.0</colorUpdateRate>
    <infraredUpdateRate>60.0</infraredUpdateRate>
    <depthTopicName>${name}/depth/image_raw</depthTopicName>
    <depthCameraInfoTopicName>${name}/depth/camera_info</depthCameraInfoTopicName>
    <colorTopicName>${name}/color/image_raw</colorTopicName>
    <colorCameraInfoTopicName>${name}/color/camera_info</colorCameraInfoTopicName>
    <infrared1TopicName>${name}/infra1/image_raw</infrared1TopicName>
    <infrared1CameraInfoTopicName>${name}/infra1/camera_info</infrared1CameraInfoTopicName>
    <infrared2TopicName>${name}/infra2/image_raw</infrared2TopicName>
    <infrared2CameraInfoTopicName>${name}/infra2/camera_info</infrared2CameraInfoTopicName>
    <colorOpticalframeName>cam_right_link_color_optical_frame</colorOpticalframeName>
    <depthOpticalframeName>cam_right_link_depth_optical_frame</depthOpticalframeName>
    <infrared1OpticalframeName>cam_right_link_left_ir_optical_frame</infrared1OpticalframeName>
    <infrared2OpticalframeName>cam_right_link_right_ir_optical_frame</infrared2OpticalframeName>
    <rangeMinDepth>0.2</rangeMinDepth>
    <rangeMaxDepth>10.0</rangeMaxDepth>
    <pointCloud>1</pointCloud>
    <pointCloudTopicName>depth/color/points</pointCloudTopicName>
    <pointCloudCutoff>0.25</pointCloudCutoff>
    <pointCloudCutoffMax>9.0</pointCloudCutoffMax>
  </plugin> -->
  

    <plugin name="turtlebot3_diff_drive" filename="libgazebo_ros_diff_drive.so">

      <ros>
        <!-- <namespace>/tb3</namespace> -->
      </ros>

      <update_rate>30</update_rate>

      <!-- wheels -->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.160</wheel_separation>
      <wheel_diameter>0.066</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>

    </plugin>

    <plugin name="turtlebot3_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <!-- <namespace>/tb3</namespace> -->
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>
    </plugin>      
  </model>
</sdf>
